// Code generated by Firebird. Edit freely - this file is yours.
package handlers

import (
	"net/http"

	"{{ .ModulePath }}/internal/services"
{{- if .RealtimeEnabled }}
	"{{ .ModulePath }}/internal/realtime"
	"log/slog"
{{- end }}
)

// RegisterRoutes sets up all application routes using the standard library ServeMux
func RegisterRoutes(mux *http.ServeMux, services *ServiceContainer{{if .RealtimeEnabled}}, connManager *realtime.ConnectionManager, logger *slog.Logger{{end}}) {
{{- if .RealtimeEnabled }}
	// WebSocket endpoint
	wsHandler := NewWebSocketHandler(connManager, logger)
	mux.HandleFunc("/ws", wsHandler.HandleWebSocket)
{{- end }}

{{- range .Handlers }}
	// {{ .ModelName }} routes
	{{ .VarName }} := New{{ .Name }}(services.{{ .ModelName }})
	mux.HandleFunc("GET /{{ .ModelPlural }}", {{ .VarName }}.Index)
	mux.HandleFunc("POST /{{ .ModelPlural }}", {{ .VarName }}.Store)
	mux.HandleFunc("GET /{{ .ModelPlural }}/{id}", {{ .VarName }}.Show)
	mux.HandleFunc("PUT /{{ .ModelPlural }}/{id}", {{ .VarName }}.Update)
	mux.HandleFunc("DELETE /{{ .ModelPlural }}/{id}", {{ .VarName }}.Destroy)
{{- end }}

	// TODO: Add custom routes here
}

// ServiceContainer holds all service dependencies
type ServiceContainer struct {
{{- range .Handlers }}
	{{ .ModelName }} services.{{ .ModelName }}Service
{{- end }}
}

// Code generated by Firebird. Edit freely - this file is yours.
package validation

import (
	"regexp"

	"github.com/go-playground/validator/v10"
)

// New creates a configured validator instance
func New() *validator.Validate {
	v := validator.New()

	// Register custom validators
	v.RegisterValidation("slug", validateSlug)

	return v
}

// validateSlug validates URL-friendly slugs
func validateSlug(fl validator.FieldLevel) bool {
	slug := fl.Field().String()
	// Lowercase letters, numbers, and hyphens only
	return regexp.MustCompile(`^[a-z0-9]+(?:-[a-z0-9]+)*$`).MatchString(slug)
}

// TODO: Add more custom validators here
// Examples:
//
// func validateUsername(fl validator.FieldLevel) bool {
//     username := fl.Field().String()
//     return regexp.MustCompile(`^[a-zA-Z0-9_]{3,20}$`).MatchString(username)
// }
//
// func validatePhoneNumber(fl validator.FieldLevel) bool {
//     phone := fl.Field().String()
//     return regexp.MustCompile(`^\+?[1-9]\d{1,14}$`).MatchString(phone)
// }

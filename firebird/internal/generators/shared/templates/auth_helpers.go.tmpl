// Code generated by Firebird. DO NOT EDIT.
// These are stub auth helpers. Install Falcon plugin for full auth support.

package helpers

import (
	"context"
	"errors"

	"github.com/google/uuid"
)

var (
	// ErrNoAuth is returned when no auth data is in context
	ErrNoAuth = errors.New("no authentication data in context")
)

// Stub type for user ID - replace with your auth system
type contextKey string

const userIDKey contextKey = "user_id"

// GetUserID extracts user ID from context
// NOTE: This is a stub. Install Falcon plugin for complete auth.
func GetUserID(ctx context.Context) (uuid.UUID, error) {
	userID, ok := ctx.Value(userIDKey).(uuid.UUID)
	if !ok {
		return uuid.Nil, ErrNoAuth
	}
	return userID, nil
}

// SetUserID adds user ID to context (for testing)
// NOTE: This is a stub. Install Falcon plugin for complete auth.
func SetUserID(ctx context.Context, userID uuid.UUID) context.Context {
	return context.WithValue(ctx, userIDKey, userID)
}

// CheckOwnership verifies if the user owns the resource
// NOTE: This is a stub. Install Falcon plugin for complete auth.
func CheckOwnership(ctx context.Context, resourceOwnerID uuid.UUID) error {
	userID, err := GetUserID(ctx)
	if err != nil {
		return err
	}

	if userID != resourceOwnerID {
		return errors.New("user does not own this resource")
	}

	return nil
}

// IsAdmin checks if user has admin role
// NOTE: This is a stub. Install Falcon plugin for complete auth.
func IsAdmin(ctx context.Context) bool {
	// TODO: Implement when Falcon plugin is added
	return false
}

// HasRole checks if user has a specific role
// NOTE: This is a stub. Install Falcon plugin for complete auth.
func HasRole(ctx context.Context, role string) bool {
	// TODO: Implement when Falcon plugin is added
	return false
}

// HasPermission checks if user has a specific permission
// NOTE: This is a stub. Install Falcon plugin for complete auth.
func HasPermission(ctx context.Context, permission string) bool {
	// TODO: Implement when Falcon plugin is added
	return false
}

// Code generated by Firebird. DO NOT EDIT.
// This file is regenerated when you run 'firebird generate resource'.

package main

import (
	"log/slog"
	"net/http"

	"github.com/go-playground/validator/v10"
	"{{ .ModulePath }}/internal/db"
{{- if .Resources }}
	"{{ .ModulePath }}/internal/handlers"
	"{{ .ModulePath }}/internal/repositories"
	"{{ .ModulePath }}/internal/services"
{{- end }}
)

// setupRoutes wires up all generated resources and registers their routes.
// This function is regenerated whenever you run 'firebird generate resource'.
func setupRoutes(mux *http.ServeMux, database *db.DB, logger *slog.Logger, validate *validator.Validate) {
{{- if .Resources }}
	// Initialize repositories
	repoLogger := logger.With(slog.String("layer", "repository"))
	{{- range .Resources }}
	{{ .NameLower }}Repo := repositories.New{{ .Name }}Repository(database, repoLogger)
	{{- end }}

	// Initialize services
	serviceLogger := logger.With(slog.String("layer", "service"))
	{{- range .Resources }}
	{{ .NameLower }}Service := services.New{{ .Name }}Service({{ .NameLower }}Repo, database, serviceLogger, validate)
	{{- end }}

	// Create service container
	serviceContainer := &handlers.ServiceContainer{
		{{- range .Resources }}
		{{ .Name }}: {{ .NameLower }}Service,
		{{- end }}
	}

	// Register all routes
	handlers.RegisterRoutes(mux, serviceContainer)
{{- else }}
	// No resources generated yet
	_ = database
	_ = logger
	_ = validate
{{- end }}
}

-- Code generated by Firebird. Edit as needed.
-- Query file for {{ .ModelName }}

-- name: Create{{ .ModelName }} :one
INSERT INTO {{ .TableName }} ({{ .InsertFields }})
VALUES ({{ .InsertParams }})
RETURNING *;

-- name: Get{{ .ModelName }} :one
SELECT {{ .SelectColumns }}
FROM {{ .TableName }}
WHERE id = $1{{ .SoftDeleteWhere }};

-- name: List{{ .ModelName }}s :many
SELECT {{ .SelectColumns }}
FROM {{ .TableName }}
{{- if .SoftDeletes }}
WHERE deleted_at IS NULL
{{- end }}
{{- if .HasTimestamps }}
ORDER BY created_at DESC
{{- else }}
ORDER BY id DESC
{{- end }};

-- name: List{{ .ModelName }}sPaginated :many
SELECT {{ .SelectColumns }}
FROM {{ .TableName }}
{{- if .SoftDeletes }}
WHERE deleted_at IS NULL
{{- end }}
{{- if .HasTimestamps }}
ORDER BY created_at DESC
{{- else }}
ORDER BY id DESC
{{- end }}
LIMIT $1 OFFSET $2;

-- name: Count{{ .ModelName }}s :one
SELECT COUNT(*)
FROM {{ .TableName }}
{{- if .SoftDeletes }}
WHERE deleted_at IS NULL
{{- end }};

-- name: Update{{ .ModelName }} :one
UPDATE {{ .TableName }}
SET {{ .UpdateFields }}
WHERE id = ${{ .UpdateParamCount }}{{ .SoftDeleteWhere }}
RETURNING *;

{{- if .SoftDeletes }}

-- name: Delete{{ .ModelName }} :exec
UPDATE {{ .TableName }}
SET deleted_at = NOW()
WHERE id = $1 AND deleted_at IS NULL;

-- name: Restore{{ .ModelName }} :exec
UPDATE {{ .TableName }}
SET deleted_at = NULL
WHERE id = $1;
{{- else }}

-- name: Delete{{ .ModelName }} :exec
DELETE FROM {{ .TableName }}
WHERE id = $1;
{{- end }}
